name: 'Pipeline: Main'
permissions:
  contents: write
  pull-requests: write
  checks: write

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  verify-code-quality:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: 'postgres://videos_db_user_dev:123123123@localhost:5432/videos_db'

    steps:
      - name: 'Checkout commit'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Install pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0

      - name: 'Setup Node'
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: 'Install dependencies'
        run: pnpm install --frozen-lockfile

      - name: 'Verify linting'
        run: pnpm lint

      - name: 'Verify formatting'
        run: pnpm format:ci

      - name: 'Verify formatting'
        run: pnpm format:ci

      - name: Run tests and generate JUnit report
        run: pnpm test:ci

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: ./test-results/junit.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start local DB
        run: docker compose -f develop/docker-compose.yaml up -d

      - name: Wait for DB to be ready
        run: |
          max_attempts=100
          attempt=0
          until docker compose -f develop/docker-compose.yaml exec db pg_isready -U videos_db_user_dev; do
            attempt=$((attempt + 1))
            if [ $attempt -ge $max_attempts ]; then
              echo "Failed to connect to DB after $max_attempts attempts"
              exit 1
            fi
            echo "Waiting for DB to be ready..."
            sleep 1
          done

      - name: Prisma migrate
        run: pnpm db:dev:migrate

      - name: DB seed
        run: pnpm db:seed

      - name: 'Build application'
        run: pnpm build
